version: '3'
services:
  #  The Application
  app:
    container_name: hlb_app
    build:
      context: ./
      dockerfile: development/app.dockerfile
    volumes:
      - ./storage:/var/www/storage
    env_file: '.env.prod'
    environment:
      - "DB_HOST=database"

  # Web Server 1
  web1:
    container_name: nginx_server1
    build:
      context: ./
      dockerfile: development/web.dockerfile
    volumes:
      - ./storage/logs_1/:/var/log/nginx1
    ports:
      - 8081:80
    depends_on: 
      - app

  # Web Server 2
  web2:
    container_name: nginx_server2
    build:
      context: ./
      dockerfile: development/web.dockerfile
    volumes:
      - ./storage/logs_2/:/var/log/nginx2
    ports:
      - 8082:80
    depends_on: 
      - app

  # Web Server 3
  web3:
    container_name: nginx_server3
    build:
      context: ./
      dockerfile: development/web.dockerfile
    volumes:
      - ./storage/logs_3/:/var/log/nginx3
    ports:
      - 8083:80
    depends_on: 
      - app

  # The Database
  database:
    container_name: database
    image: mysql:5.7
    volumes:
      - dbdata:/var/lib/mysql
    environment:
      MYSQL_DATABASE: backendHLB
      MYSQL_ROOT_PASSWORD: pass123
    ports:
      - 8990:3306

  # The load balancer
  load_balancer:
    container_name: load_balancer
    image: haproxy
    build: ./haproxy
    depends_on:
      - web1
      - web2
      - web3
    ports: 
      - 8080:8080
    volumes:  # HAProxy configuration volume mount   
      - './haproxy/haproxy.cfg' 

volumes:
  dbdata: